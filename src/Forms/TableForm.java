package Forms;

import CRUD.Services.TableService;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.lang.reflect.Field;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;

public class TableForm extends SimpleForm {
    private JTable tableData;
    private JPanel mainPanel;

    public TableForm(String tableName) {
        TableService tableService = new TableService();
        try {
            //tableData.setModel(buildTableModel(tableService.GetAllRows(tableName)));
            Object[] objects = tableService.GetAllRows(tableName);
            FillTable(objects);
            //illTable(tableService.GetAllRows(tableName));
        } catch (Exception e) {
            e.printStackTrace();
        }
        Open(mainPanel);


    }

    @Override
    public void AddListeners() {

    }

    @Override
    public void Close() {

    }

    public void FillTable(Object[] items) {
        if (items.length > 0) {
            DefaultTableModel model = new DefaultTableModel();
            Field[] fields = items[0].getClass().getDeclaredFields();
            Object[] fieldNames = new Object[fields.length];
            for (int i = 0; i < fields.length; i++) {
                model.addColumn(fields[i].getName());
                fieldNames[i] = fields[i].getName();
            }

            model.addRow(fieldNames);
            for (int i = 0; i < items.length; i++) {
                Object[] fieldValues = new Object[fields.length];
                for (int j = 0; j < fields.length; j++) {
                    try {
                        fieldValues[j] = items[i].getClass().getDeclaredField(fields[j].getName()).get(items[i]);
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
                model.addRow(fieldValues);
            }

            tableData.setModel(model);
        }
    }

    public void FillTable(ResultSet rs) {
        try {


            //To remove previously added rows
            while (tableData.getRowCount() > 0) {
                ((DefaultTableModel) tableData.getModel()).removeRow(0);
            }
            int columns = rs.getMetaData().getColumnCount();
            while (rs.next()) {
                Object[] row = new Object[columns];
                for (int i = 1; i <= columns; i++) {
                    row[i - 1] = rs.getObject(i);
                }
                ((DefaultTableModel) tableData.getModel()).insertRow(rs.getRow() - 1, row);
            }

            rs.close();
        } catch (SQLException e) {
        }
    }


    public static DefaultTableModel buildTableModel(ResultSet rs) throws SQLException {

        ResultSetMetaData metaData = rs.getMetaData();

        // names of columns
        Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        for (int column = 1; column <= columnCount; column++) {
            columnNames.add(metaData.getColumnName(column));
        }

        // data of the table
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }

        return new DefaultTableModel(data, columnNames);

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        tableData = new JTable();
        mainPanel.add(tableData, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(400, 400), new Dimension(400, 400), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
